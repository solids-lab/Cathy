name: Weekly Health Check

on:
  schedule:
    # 每周日 UTC 01:00 (北京时间 09:00) 运行
    - cron: '0 1 * * 0'
  
  workflow_dispatch:
    inputs:
      samples:
        description: 'Number of test samples for health check'
        required: false
        default: '200'
        type: string

jobs:
  health-check:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        lfs: true
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
        pip install numpy scipy matplotlib seaborn pandas
        pip install networkx scikit-learn
    
    - name: Run comprehensive health check
      id: health_check
      run: |
        SAMPLES="${{ github.event.inputs.samples || '200' }}"
        echo "Running weekly health check with $SAMPLES samples..."
        
        # 设置固定随机种子
        export PYTHONHASHSEED=42
        
        # 运行健康检查
        python ci_check.py --samples $SAMPLES
        
        # 分析结果
        if [ -f "ci_report.json" ]; then
          SUCCESS=$(python -c "import json; print(json.load(open('ci_report.json'))['success'])")
          SUCCESS_RATE=$(python -c "import json; print(json.load(open('ci_report.json'))['results']['success_rate'])")
          TOTAL_PORTS=$(python -c "import json; print(json.load(open('ci_report.json'))['results']['total_ports'])")
          PASSED_PORTS=$(python -c "import json; print(json.load(open('ci_report.json'))['results']['passed_ports'])")
          
          if [ "$SUCCESS" = "True" ]; then
            echo "health_status=healthy" >> $GITHUB_OUTPUT
            echo "health_emoji=🟢" >> $GITHUB_OUTPUT
            echo "health_status_text=HEALTHY" >> $GITHUB_OUTPUT
          else
            echo "health_status=degraded" >> $GITHUB_OUTPUT
            echo "health_emoji=🟡" >> $GITHUB_OUTPUT
            echo "health_status_text=DEGRADED" >> $GITHUB_OUTPUT
          fi
          
          echo "success_rate=$SUCCESS_RATE" >> $GITHUB_OUTPUT
          echo "total_ports=$TOTAL_PORTS" >> $GITHUB_OUTPUT
          echo "passed_ports=$PASSED_PORTS" >> $GITHUB_OUTPUT
        else
          echo "health_status=degraded" >> $GITHUB_OUTPUT
          echo "health_emoji=🔴" >> $GITHUB_OUTPUT
          echo "health_status_text=FAILED" >> $GITHUB_OUTPUT
          echo "success_rate=0.0%" >> $GITHUB_OUTPUT
          echo "total_ports=0" >> $GITHUB_OUTPUT
          echo "passed_ports=0" >> $GITHUB_OUTPUT
        fi
    
    - name: Upload health check artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: weekly-health-check-${{ github.run_number }}
        path: |
          ci_report.json
          models/releases/*/consistency_*.json
        retention-days: 90  # 保留更长时间用于趋势分析
    
    - name: Create issue if health degraded
      if: steps.health_check.outputs.health_status == 'degraded'
      uses: actions/github-script@v6
      with:
        script: |
          const successRate = '${{ steps.health_check.outputs.success_rate }}';
          const totalPorts = '${{ steps.health_check.outputs.total_ports }}';
          const passedPorts = '${{ steps.health_check.outputs.passed_ports }}';
          const healthEmoji = '${{ steps.health_check.outputs.health_emoji }}';
          
          const title = `${healthEmoji} Weekly Health Check: System Performance Degraded`;
          const body = `## Weekly Health Check Alert
          
          **Status:** ${healthEmoji} DEGRADED
          **Date:** ${new Date().toISOString().split('T')[0]}
          **Success Rate:** ${successRate}
          **Ports Status:** ${passedPorts}/${totalPorts} passed
          
          ### Issue Description
          The weekly health check detected that some curriculum stages are not meeting their success thresholds.
          
          ### Recommended Actions
          1. Review the detailed test logs in the workflow artifacts
          2. Identify which specific stages are failing
          3. Consider running targeted re-training for failing stages
          4. Monitor for trends over multiple weeks
          
          ### Artifacts
          - Detailed logs and results are available in workflow run #${context.runNumber}
          - Check the \`weekly-health-check-${context.runNumber}\` artifact
          
          **Auto-generated by Weekly Health Check workflow**`;
          
          // 检查是否已有类似的open issue
          const issues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            labels: 'health-check,automated'
          });
          
          const existingIssue = issues.data.find(issue => 
            issue.title.includes('Weekly Health Check') && 
            issue.title.includes('Degraded')
          );
          
          if (!existingIssue) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['health-check', 'automated', 'performance']
            });
          } else {
            // 更新现有issue
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: existingIssue.number,
              body: `### Update: ${new Date().toISOString().split('T')[0]}
              
              Health check still showing degraded performance:
              - Success Rate: ${successRate}
              - Ports Status: ${passedPorts}/${totalPorts} passed
              
              See workflow run #${context.runNumber} for details.`
            });
          }
    
    - name: Close health issues if recovered
      if: steps.health_check.outputs.health_status == 'healthy'
      uses: actions/github-script@v6
      with:
        script: |
          // 查找open的health check issues
          const issues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            labels: 'health-check,automated'
          });
          
          for (const issue of issues.data) {
            if (issue.title.includes('Weekly Health Check') && issue.title.includes('Degraded')) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: `### ✅ System Recovered
                
                **Date:** ${new Date().toISOString().split('T')[0]}
                **Status:** 🟢 HEALTHY
                **Success Rate:** ${{ steps.health_check.outputs.success_rate }}
                
                All curriculum stages are now passing their consistency tests. Closing this issue.
                
                See workflow run #${context.runNumber} for details.`
              });
              
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                state: 'closed'
              });
            }
          }