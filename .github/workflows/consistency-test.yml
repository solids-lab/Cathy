name: Curriculum Consistency Test

on:
  pull_request:
    branches: [ master, main ]
    paths:
      - 'src/federated/**'
      - 'models/**'
      - '.github/workflows/consistency-test.yml'
  
  schedule:
    # ÊØèÂë®‰∏Ä UTC 02:00 (Âåó‰∫¨Êó∂Èó¥ 10:00) ËøêË°å
    - cron: '0 2 * * 1'
  
  workflow_dispatch:
    inputs:
      samples:
        description: 'Number of test samples'
        required: false
        default: '100'
        type: string

jobs:
  consistency-test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        lfs: true  # Á°Æ‰øù‰∏ãËΩΩÂ§ßÊñá‰ª∂ÔºàÊ®°ÂûãÔºâ
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
        pip install numpy scipy matplotlib seaborn pandas
        pip install networkx scikit-learn
        # Â¶ÇÊûúÊúârequirements.txtÔºåÂèñÊ∂àÊ≥®Èáä‰∏ã‰∏ÄË°å
        # pip install -r requirements.txt
    
    - name: Verify model files exist
      run: |
        echo "Checking for model files..."
        find models/curriculum_v2 -name "*.pt" | head -10
        echo "Total model files: $(find models/curriculum_v2 -name "*.pt" | wc -l)"
    
    - name: Run consistency test
      id: consistency_test
      run: |
        # ËÆæÁΩÆÂõ∫ÂÆöÈöèÊú∫ÁßçÂ≠êÁ°Æ‰øùÂèØÈáçÂ§çÊÄß
        export PYTHONHASHSEED=42
        
        # ËøêË°åCIÊ£ÄÊü•ËÑöÊú¨
        SAMPLES="${{ github.event.inputs.samples || '100' }}"
        echo "Running consistency test with $SAMPLES samples..."
        
        python ci_check.py --samples $SAMPLES
        
        # Ê£ÄÊü•ÁªìÊûúÊñá‰ª∂
        if [ -f "ci_report.json" ]; then
          SUCCESS_RATE=$(python -c "import json; data=json.load(open('ci_report.json')); print(data['results']['success_rate'])")
          echo "success_rate=$SUCCESS_RATE" >> $GITHUB_OUTPUT
          
          # ‰ΩøÁî®Êñ∞ÁöÑCIÊàêÂäüÊ†áÂáÜ
          if [ "$(python -c "import json; print(json.load(open('ci_report.json'))['ci_success'])")" = "True" ]; then
            echo "test_result=success" >> $GITHUB_OUTPUT
          else
            echo "test_result=failure" >> $GITHUB_OUTPUT
          fi
        else
          echo "test_result=failure" >> $GITHUB_OUTPUT
          echo "success_rate=0.0%" >> $GITHUB_OUTPUT
        fi
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: consistency-test-results-${{ github.run_number }}
        path: |
          ci_report.json
          models/releases/*/consistency_*.json
        retention-days: 30
    
    - name: Comment PR with results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const testResult = '${{ steps.consistency_test.outputs.test_result }}';
          const successRate = '${{ steps.consistency_test.outputs.success_rate }}';
          const samples = '${{ github.event.inputs.samples || '100' }}';
          
          const emoji = testResult === 'success' ? '‚úÖ' : '‚ùå';
          const status = testResult === 'success' ? 'PASSED' : 'FAILED';
          
          const body = `## ${emoji} Curriculum Consistency Test ${status}
          
          **Test Configuration:**
          - Samples: ${samples}
          - Success Rate: ${successRate}
          - Commit: ${context.sha.substring(0, 7)}
          
          **Result:** ${testResult === 'success' ? 
            'All ports passed consistency tests! üéâ' : 
            'Some ports failed consistency tests. Please check the logs.'}
          
          <details>
          <summary>View test artifacts</summary>
          
          Test results and logs are available in the workflow artifacts.
          </details>`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });
    
    - name: Fail if tests failed
      if: steps.consistency_test.outputs.test_result == 'failure'
      run: |
        echo "‚ùå Consistency tests failed. Blocking merge."
        exit 1